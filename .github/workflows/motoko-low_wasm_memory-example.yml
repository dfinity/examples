name: motoko-low_wasm_memory
on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - motoko/low_wasm_memory/**
      - .github/workflows/provision-darwin.sh
      - .github/workflows/provision-linux.sh
      - .github/workflows/motoko-low_wasm_memory-example.yml
      - .github/workflows/motoko-low_wasm_memory-skip.yml
      - .ic-commit
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  motoko-low_wasm_memory-darwin:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v1
      - name: Provision Darwin
        run: bash .github/workflows/provision-darwin.sh
      - name: Motoko low_wasm_memory Darwin
        run: |
          pushd motoko/low_wasm_memory
          dfx start --background
          dfx deploy low_wasm_memory_hook
          dfx canister update-settings low_wasm_memory_hook --wasm-memory-limit 4000000 --wasm-memory-threshold 1000000
          dfx canister status low_wasm_memory_hook
          max_wait=20
          waited=0
          until [[ $(dfx canister call low_wasm_memory_hook --query getExecutedFunctionsOrder) == *onLowWasmMemory* ]]; do
            sleep 1
            waited=$((waited+1))
            if [ $waited -ge $max_wait ]; then
              echo "Timed out waiting for onLowWasmMemory event"
              exit 1
            fi
          done
          popd
  motoko-low_wasm_memory-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v1
      - name: Provision Linux
        run: bash .github/workflows/provision-linux.sh
      - name: Motoko low_wasm_memory Linux
        run: |
          pushd motoko/low_wasm_memory
          dfx start --background
          dfx deploy low_wasm_memory_hook
          dfx canister update-settings low_wasm_memory_hook --wasm-memory-limit 4000000 --wasm-memory-threshold 1000000
          dfx canister status low_wasm_memory_hook
          max_wait=20
          waited=0
          until [[ $(dfx canister call low_wasm_memory_hook --query getExecutedFunctionsOrder) == *onLowWasmMemory* ]]; do
            sleep 1
            waited=$((waited+1))
            if [ $waited -ge $max_wait ]; then
              echo "Timed out waiting for onLowWasmMemory event"
              exit 1
            fi
          done
          popd
