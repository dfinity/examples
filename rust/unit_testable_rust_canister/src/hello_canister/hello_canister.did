// Request/Response types for API evolution
type GetCounterRequest = record {};

type GetCounterResponse = record {
  count: opt nat64;
};

type IncrementCounterRequest = record {};

type IncrementCounterResponse = record {
  new_count: opt nat64;
};

type ListProposalsRequest = record {};

type ListProposalsResponse = record {
  proposal_ids: opt vec nat64;
  error: opt text;
};

type GetProposalInfoRequest = record {
  proposal_id: opt nat64;
};

type ProposalInfo = record {
  id: nat64;
  title: text;
  summary: text; 
  proposer: text;
};

type GetProposalInfoResponse = record {
  proposal: opt ProposalInfo;
  error: opt text;
};

type GetProposalCountRequest = record {};

type GetProposalCountResponse = record {
  count: opt nat;
  error: opt text;
};

type GetProposalTitlesRequest = record {
  limit: opt nat32;
};

type GetProposalTitlesResponse = record {
  titles: opt vec text;
  error: opt text;
};

service : {
  // Request/Response API for evolution support
  get_counter: (GetCounterRequest) -> (GetCounterResponse) query;
  increment_counter: (IncrementCounterRequest) -> (IncrementCounterResponse);
  list_proposals: (ListProposalsRequest) -> (ListProposalsResponse);
  get_proposal_info: (GetProposalInfoRequest) -> (GetProposalInfoResponse);
  get_proposal_count: (GetProposalCountRequest) -> (GetProposalCountResponse);
  get_proposal_titles: (GetProposalTitlesRequest) -> (GetProposalTitlesResponse);
}
