type InitArg = record {
    // The canister will interact with this Ethereum network.
    ethereum_network : opt EthereumNetwork;

    // The name of the ECDSA key to use.
    ecdsa_key_name : opt EcdsaKeyName;
};

type EthereumNetwork = variant {
    // The public Ethereum mainnet.
    Mainnet;
    // The public Ethereum Sepolia testnet.
    Sepolia;
};

type EcdsaKeyName = variant {
    // For local development with `dfx`
    TestKeyLocalDevelopment;
    // For testing with the Internet Computer's test key.
    TestKey1;
    // For running the canister in a production environment using the Internet Computer's production key.
    ProductionKey1;
}

service : (opt InitArg) -> {
    // Returns the Ethereum address to which the owner should send ETH
    // before sending the amount to another address via the canister using the [send_eth]
    // endpoint.
    //
    // If the owner is not set, it defaults to the caller's principal.
    ethereum_address : (owner: opt principal) -> (text);
}
